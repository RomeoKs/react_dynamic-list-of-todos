{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","selectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","handleInput","getSelectTodos","onClearInput","isSearchActive","onChange","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","isLoadingUser","selectedUser","onClosePopUp","href","email","name","App","useState","todos","setTodos","searchQuery","setQuery","filteredTodos","setFilteredTodos","isLoading","setIsLoading","setSearchActive","setIsLoadingUser","setSelectedTodo","setSelectedUser","filter","lowerTitle","toLowerCase","lowerQuery","trim","includes","useEffect","data","finally","userId","user","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e267399.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectTodo: (todo: Todo) => void,\n  visibleTodos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos, selectTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"has-background-info-light\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/*         <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n        <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">6</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              qui ullam ratione quibusdam voluptatem quia omnis\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">8</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\n\ntype Props = {\n  query: string,\n  handleInput: (event: ChangeEvent<HTMLInputElement>) => void,\n  getSelectTodos: (event: ChangeEvent<HTMLSelectElement>) => void,\n  onClearInput: () => void,\n  isSearchActive: boolean;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  handleInput,\n  getSelectTodos,\n  onClearInput,\n  isSearchActive,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span\n          className=\"select\"\n          onChange={getSelectTodos}\n        >\n          <select data-cy=\"statusSelect\">\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {isSearchActive && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  isLoadingUser: boolean,\n  selectedUser: User | null,\n  onClosePopUp: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  isLoadingUser,\n  selectedUser,\n  onClosePopUp,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClosePopUp}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">\n                {selectedTodo.completed}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setQuery] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSearchActive, setSearchActive] = useState(false);\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setSearchActive(true);\n  };\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closePopUp = () => {\n    setSelectedTodo(null);\n  };\n\n  const onClearInput = () => {\n    setQuery('');\n    setSearchActive(false);\n  };\n\n  const visibleTodos = filteredTodos.filter(todo => {\n    const lowerTitle = todo.title.toLowerCase();\n    const lowerQuery = searchQuery.toLowerCase().trim();\n\n    return lowerTitle.includes(lowerQuery);\n  });\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(data => {\n        setTodos(data);\n        setFilteredTodos(data);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setIsLoadingUser(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(user => {\n          setSelectedUser(user);\n        })\n        .finally(() => {\n          setIsLoadingUser(false);\n        });\n    }\n  }, [selectedTodo]);\n\n  const getSelectTodos = (event: ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'active':\n        setFilteredTodos(todos.filter(todo => !todo.completed));\n        break;\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                handleInput={handleInput}\n                isSearchActive={isSearchActive}\n                getSelectTodos={getSelectTodos}\n                onClearInput={onClearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                visibleTodos={visibleTodos}\n                selectTodo={selectTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedUser={selectedUser}\n          selectedTodo={selectedTodo}\n          isLoadingUser={isLoadingUser}\n          onClosePopUp={closePopUp}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}