{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","selectTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","handleInput","getSelectTodos","onClearInput","isSearchActive","onChange","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","isLoadingUser","selectedUser","onClosePopUp","href","email","name","App","useState","todos","setTodos","searchQuery","setQuery","filteredTodos","setFilteredTodos","isLoading","setIsLoading","setSearchActive","setIsLoadingUser","setSelectedTodo","setSelectedUser","filter","lowerTitle","toLowerCase","lowerQuery","trim","includes","useEffect","data","finally","userId","user","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa75b855.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectTodo: (todo: Todo) => void,\n  visibleTodos: Todo[];\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\n\ntype Props = {\n  query: string,\n  handleInput: (event: ChangeEvent<HTMLInputElement>) => void,\n  getSelectTodos: (event: ChangeEvent<HTMLSelectElement>) => void,\n  onClearInput: () => void,\n  isSearchActive: boolean;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  handleInput,\n  getSelectTodos,\n  onClearInput,\n  isSearchActive,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span\n          className=\"select\"\n          onChange={getSelectTodos}\n        >\n          <select data-cy=\"statusSelect\">\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {isSearchActive && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  isLoadingUser: boolean,\n  selectedUser: User | null,\n  onClosePopUp: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  isLoadingUser,\n  selectedUser,\n  onClosePopUp,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClosePopUp}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-success': selectedTodo.completed,\n                  'has-text-danger': !selectedTodo.completed,\n                })}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setQuery] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSearchActive, setSearchActive] = useState(false);\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setSearchActive(true);\n  };\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closePopUp = () => {\n    setSelectedTodo(null);\n  };\n\n  const onClearInput = () => {\n    setQuery('');\n    setSearchActive(false);\n  };\n\n  const visibleTodos = filteredTodos.filter(todo => {\n    const lowerTitle = todo.title.toLowerCase();\n    const lowerQuery = searchQuery.toLowerCase().trim();\n\n    return lowerTitle.includes(lowerQuery);\n  });\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(data => {\n        setTodos(data);\n        setFilteredTodos(data);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setIsLoadingUser(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(user => {\n          setSelectedUser(user);\n        })\n        .finally(() => {\n          setIsLoadingUser(false);\n        });\n    }\n  }, [selectedTodo]);\n\n  const getSelectTodos = (event: ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'active':\n        setFilteredTodos(todos.filter(todo => !todo.completed));\n        break;\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                handleInput={handleInput}\n                isSearchActive={isSearchActive}\n                getSelectTodos={getSelectTodos}\n                onClearInput={onClearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                visibleTodos={visibleTodos}\n                selectTodo={selectTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedUser={selectedUser}\n          selectedTodo={selectedTodo}\n          isLoadingUser={isLoadingUser}\n          onClosePopUp={closePopUp}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}