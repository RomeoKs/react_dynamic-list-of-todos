{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","className","map","todo","id","completed","classNames","title","type","TodoFilter","query","onInputQuery","onSelectTodos","onClearInput","onChange","value","placeholder","style","pointerEvents","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","App","useState","todos","setTodos","searchQuery","setQuery","filteredTodos","setFilteredTodos","isLoading","setIsLoading","filter","lowerTitle","toLowerCase","lowerQuery","trim","includes","useEffect","data","finally","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.404ab596.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"has-background-info-light\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                classNames(\n                  todo.completed ? 'has-text-success' : 'has-text-danger',\n                )\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/*         <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n        <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">6</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              qui ullam ratione quibusdam voluptatem quia omnis\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">8</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\n\ntype Props = {\n  query: string,\n  onInputQuery: (event: ChangeEvent<HTMLInputElement>) => void,\n  onSelectTodos: (event: ChangeEvent<HTMLSelectElement>) => void,\n  onClearInput: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onInputQuery,\n  onSelectTodos,\n  onClearInput,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span\n          className=\"select\"\n          onChange={onSelectTodos}\n        >\n          <select data-cy=\"statusSelect\">\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onInputQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onClearInput}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n// import { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setQuery] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onInputQuery = (event: ChangeEvent<HTMLInputElement>) => setQuery(event.target.value);\n\n  const onClearInput = () => setQuery('');\n\n  const visibleTodos = filteredTodos.filter(todo => {\n    const lowerTitle = todo.title.toLowerCase();\n    const lowerQuery = searchQuery.toLowerCase().trim();\n\n    return lowerTitle.includes(lowerQuery);\n  });\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(data => {\n        setTodos(data);\n        setFilteredTodos(data);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const onSelectTodos = (event: ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'active':\n        setFilteredTodos(todos.filter(todo => !todo.completed));\n        break;\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                onInputQuery={onInputQuery}\n                onSelectTodos={onSelectTodos}\n                onClearInput={onClearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList visibleTodos={visibleTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <TodoModal /> */}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}